{"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)serialPortManager":{"name":"serialPortManager","abstract":"<p>Manages possible serial ports to connect.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)availableBaudRates":{"name":"availableBaudRates","abstract":"<p>Possible baud rates for the user to select.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)serialPort":{"name":"serialPort","abstract":"<p>Serial port instance, which is an ORSSerialPort object, that controlls sending, recieving data with correct paramters.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/s:22SwiftIO_Serial_Connect0a8IOSerialD10ControllerC13maxSendLengthSivp":{"name":"maxSendLength","abstract":"<p>Number of bytes that the SwiftIO board is expecting.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)sendButton":{"name":"sendButton","abstract":"<p>Button labeled &ldquo;Send&rdquo;</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)sendTextField":{"name":"sendTextField","abstract":"<p>Text field labeled &ldquo;Input Value&rdquo;</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)openCloseButton":{"name":"openCloseButton","abstract":"<p>Button labeled &ldquo;Open&rdquo; or &ldquo;Close&rdquo; based on the serial port&rsquo;s status</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)dataReceivedTextView":{"name":"dataReceivedTextView","abstract":"<p>Bottom text field for receiving data, default empty.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)colorWell":{"name":"colorWell","abstract":"<p>Color square adjacent to port path selection, denoting whether serial port is connected</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)helpTextField":{"name":"helpTextField","abstract":"<p>Default empty text field, toggles help text.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(py)helpButton":{"name":"helpButton","abstract":"<p>Button labeled &ldquo;?&rdquo;</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)helpButtonAction:":{"name":"helpButtonAction(_:)","abstract":"<p>Action method called when &ldquo;?&rdquo; button is pressed. Toggles on and off the baud rate comment</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)sendButtonAction:":{"name":"sendButtonAction(_:)","abstract":"<p>Action method called when &ldquo;Send&rdquo; button is pressed. Prepares and sends data to SwiftIO board</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/s:22SwiftIO_Serial_Connect0a8IOSerialD10ControllerC11prepareData5inputS2S_tF":{"name":"prepareData(input:)","abstract":"<p>Method for padded data to send over serial connection.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)openCloseButtonAction:":{"name":"openCloseButtonAction(_:)","abstract":"<p>Action method called when &ldquo;Open&rdquo;/&ldquo;Close&rdquo; button. Opens or closes serial port connection depending on port status</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)clearButtonAction:":{"name":"clearButtonAction(_:)","abstract":"<p>Action method called when data received &ldquo;Clear&rdquo; button is pressed. Clears text field.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)dataSendClearButton:":{"name":"dataSendClearButton(_:)","abstract":"<p>Action method called when data send &ldquo;Clear&rdquo; button is pressed. Clears text field.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)serialPortWasOpened:":{"name":"serialPortWasOpened(_:)","abstract":"<p>Update button text and color well when serial port is opened.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)serialPortWasClosed:":{"name":"serialPortWasClosed(_:)","abstract":"<p>Update button text and and color well when serial port is closed.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)serialPort:didReceiveData:":{"name":"serialPort(_:didReceive:)","abstract":"<p>Method for receiving data from serial connection and displaying it on the interface.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)serialPortWasRemovedFromSystem:":{"name":"serialPortWasRemovedFromSystem(_:)","abstract":"<p>Method for disconnecting the serial port in code and on the interface when the connection is removed from the port manager.</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/SwiftIOSerialConnectController.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)SwiftIOSerialConnectController(im)serialPort:didEncounterError:":{"name":"serialPort(_:didEncounterError:)","abstract":"<p>Method for letting the user know when there is an error with the serial port connection</p>","parent_name":"SwiftIOSerialConnectController"},"Classes/AppDelegate.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)AppDelegate(py)window":{"name":"window","abstract":"<p>Undocumented</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)AppDelegate(im)applicationDidFinishLaunching:":{"name":"applicationDidFinishLaunching(_:)","abstract":"<p>Undocumented</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@SwiftIO_Serial_Connect@objc(cs)AppDelegate(im)applicationWillTerminate:":{"name":"applicationWillTerminate(_:)","abstract":"<p>Undocumented</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>Undocumented</p>"},"Classes/SwiftIOSerialConnectController.html":{"name":"SwiftIOSerialConnectController","abstract":"<p>Controller class to hold functionality for interaction with the user interface built with a .xib interface builder.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}